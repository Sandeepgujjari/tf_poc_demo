# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: 
 branches:
  include:
    - main
# parameters:
# - name: image
#   displayName: Subscription
#   type: string


stages:
- stage: Build
  jobs:
  - job: Job_1
    displayName: Terraform Plan
    pool: default
    steps:
    - checkout: self
      fetchDepth: 1

    - task: TerraformTaskV4@4
      displayName: Terraform INIT
      inputs:
        provider: 'azurerm'
        command: 'init'
        backendServiceArm: 'ado-tf-sp'
        backendAzureRmResourceGroupName: 'poc_demo_rg'
        backendAzureRmStorageAccountName: 'iacstorageaccountpocdemo'
        backendAzureRmContainerName: 'devtfstate'
        backendAzureRmKey: 'devtfstatefile'
      
    - task: TerraformTaskV4@4
      displayName: Terraform Plan
      inputs:
        provider: 'azurerm'
        command: 'plan'
        commandOptions: '--var-file="./env/dev.tfvars"'
        environmentServiceNameAzureRM: 'ado-tf-sp'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '.'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    



- stage: Deploy
  dependsOn: Build
  jobs:
  - deployment: 'TerraformDeploy'
    environment: 'Development'
    pool: default
    strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
              fetchDepth: 1

            - task: TerraformTaskV4@4
              displayName: Terraform INIT
              inputs:
                provider: 'azurerm'
                command: 'init'
                backendServiceArm: 'ado-tf-sp'
                backendAzureRmResourceGroupName: 'poc_demo_rg'
                backendAzureRmStorageAccountName: 'iacstorageaccountpocdemo'
                backendAzureRmContainerName: 'devtfstate'
                backendAzureRmKey: 'devtfstatefile'
            
            - task: TerraformTaskV4@4
              displayName: Terraform Apply
              inputs:
                provider: 'azurerm'
                command: 'destroy'
                commandOptions: '--var-file="./env/dev.tfvars" -auto-approve'
                environmentServiceNameAzureRM: 'poc_demo_svp'
